<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.test.data.ProjectRepository">
  <!-- CodeBuilder Generated -->
  <resultMap id="ProjectMap" type="com.example.test.domain.Project">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="operator" property="operator" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="commit_time" property="commitTime" jdbcType="DATE" />
    <result column="expl" property="expl" jdbcType="VARCHAR" />
    <result column="product_type" property="productType" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" suffix=")" prefixOverrides="and">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Table_Name">
    project
  </sql>
  <sql id="Base_Column_List_Without_Id">
    name, operator, state, create_time, commit_time, expl, product_type, status
  </sql>
  <sql id="Base_Column_List">
    id, 
    <include refid="Base_Column_List_Without_Id" />
  </sql>
  <sql id="Insert_Columns">
    <if test="record.name != null">
      name,
    </if>
    <if test="record.operator != null">
      operator,
    </if>
    <if test="record.state != null">
      state,
    </if>
    <if test="record.createTime != null">
      create_time,
    </if>
    <if test="record.commitTime != null">
      commit_time,
    </if>
    <if test="record.expl != null">
      expl,
    </if>
    <if test="record.productType != null">
      product_type,
    </if>
    <if test="record.status != null">
      status,
    </if>
  </sql>
  <sql id="Insert_Values">
    <if test="record.name != null">
      #{record.name,jdbcType=VARCHAR},
    </if>
    <if test="record.operator != null">
      #{record.operator,jdbcType=INTEGER},
    </if>
    <if test="record.state != null">
      #{record.state,jdbcType=INTEGER},
    </if>
    <if test="record.createTime != null">
      #{record.createTime,jdbcType=DATE},
    </if>
    <if test="record.commitTime != null">
      #{record.commitTime,jdbcType=DATE},
    </if>
    <if test="record.expl != null">
      #{record.expl,jdbcType=VARCHAR},
    </if>
    <if test="record.productType != null">
      #{record.productType,jdbcType=INTEGER},
    </if>
    <if test="record.status != null">
      #{record.status,jdbcType=INTEGER},
    </if>
  </sql>
  <sql id="Batch_Insert_Values">
    #{record.name,jdbcType=VARCHAR},
    #{record.operator,jdbcType=INTEGER},
    #{record.state,jdbcType=INTEGER},
    #{record.createTime,jdbcType=DATE},
    #{record.commitTime,jdbcType=DATE},
    #{record.expl,jdbcType=VARCHAR},
    #{record.productType,jdbcType=INTEGER},
    #{record.status,jdbcType=INTEGER},
  </sql>
  <sql id="Batch_Insert_Values_On_DuplicateKey">
    #{record.id,jdbcType=INTEGER},
    <include refid="Batch_Insert_Values" />
  </sql>
  <sql id="Update_Set_From_Bean">
    <if test="record.name != null">
      name = #{record.name,jdbcType=VARCHAR},
    </if>
    <if test="record.operator != null">
      operator = #{record.operator,jdbcType=INTEGER},
    </if>
    <if test="record.state != null">
      state = #{record.state,jdbcType=INTEGER},
    </if>
    <if test="record.createTime != null">
      create_time = #{record.createTime,jdbcType=DATE},
    </if>
    <if test="record.commitTime != null">
      commit_time = #{record.commitTime,jdbcType=DATE},
    </if>
    <if test="record.expl != null">
      expl = #{record.expl,jdbcType=VARCHAR},
    </if>
    <if test="record.productType != null">
      product_type = #{record.productType,jdbcType=INTEGER},
    </if>
    <if test="record.status != null">
      status = #{record.status,jdbcType=INTEGER},
    </if>
  </sql>
  <!-- insert -->
  <insert id="insert" parameterType="java.util.Map">
    <selectKey resultType="java.lang.Integer" keyProperty="record.id" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into 
    <include refid="Table_Name" />
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Insert_Columns" />
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <include refid="Insert_Values" />
    </trim>
  </insert>
  <insert id="batchInsert" parameterType="java.util.Map">
    insert into 
    <include refid="Table_Name" />
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List_Without_Id" />
    </trim>
    values 
    <foreach collection="records" item="record" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <include refid="Batch_Insert_Values" />
      </trim>
    </foreach>
  </insert>
  <insert id="batchInsertOnDuplicateKey" parameterType="java.util.Map">
    insert into 
    <include refid="Table_Name" />
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    values 
    <foreach collection="records" item="record" index="index" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <include refid="Batch_Insert_Values_On_DuplicateKey" />
      </trim>
    </foreach>
    ON DUPLICATE KEY UPDATE
    name = VALUES(name), operator = VALUES(operator), state = VALUES(state), create_time = VALUES(create_time), commit_time = VALUES(commit_time), expl = VALUES(expl), product_type = VALUES(product_type), status = VALUES(status)
  </insert>
  <!-- end insert -->
  <!-- delete -->
  <delete id="deleteById" parameterType="java.util.Map">
    delete from 
    <include refid="Table_Name" />
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="java.util.Map">
    delete from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteIn" parameterType="java.util.Map">
    delete from 
    <include refid="Table_Name" />
    where id in 
    <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
      #{record.id,jdbcType=INTEGER}
    </foreach>
  </delete>
  <!-- end delete -->
  <!-- update -->
  <update id="updateById" parameterType="java.util.Map">
    update 
    <include refid="Table_Name" />
    <set>
      <include refid="Update_Set_From_Bean" />
    </set>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByExample" parameterType="java.util.Map">
    update 
    <include refid="Table_Name" />
    <set>
      <include refid="Update_Set_From_Bean" />
    </set>
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="batchUpdate" parameterType="java.util.Map">
    <foreach collection="records" item="record" index="index" open="" close="" separator=";">
      update 
      <include refid="Table_Name" />
      <set>
        <include refid="Update_Set_From_Bean" />
      </set>
      where id = #{record.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <!-- end update -->
  <!-- select -->
  <select id="selectById" parameterType="java.util.Map" resultMap="ProjectMap">
    select 
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExample" resultMap="ProjectMap" parameterType="java.util.Map">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectOneByExample" resultMap="ProjectMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectIn" resultMap="ProjectMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from 
    <include refid="Table_Name" />
    where id in 
    <foreach collection="records" item="record" index="index" open="(" separator="," close=")">
      #{record.id,jdbcType=INTEGER}
    </foreach>
  </select>
  <select id="countByExample" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(1) as total from 
    <include refid="Table_Name" />
    <if test="example != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
</mapper>